{"version":3,"sources":["ducks/user/action-types.ts","ducks/user/types.ts","ducks/user/reducer.ts","ducks/meeting/action-types.ts","ducks/meeting/types.ts","ducks/meeting/reducer.ts","services/auth.ts","ducks/user/sagas.ts","services/meeting.ts","ducks/meeting/sagas.ts","ducks/store.ts","views/components/UI/content.tsx","views/components/UI/Images.tsx","views/components/UI/Buttons.tsx","views/components/forms/Login/index.tsx","views/screens/Login/index.tsx","ducks/user/selectors.ts","hooks/Private/route.tsx","views/components/UI/Header/index.tsx","views/components/Header/index.tsx","views/components/SideMenu/index.tsx","views/components/UI/Icons/index.tsx","views/components/forms/Meeting/index.tsx","views/components/Meetings/index.tsx","ducks/meeting/selectors.ts","views/screens/Meeting/index.tsx","views/screens/Schedule/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LOGIN","createRoutine","initialState","name","token","email","role","id","lastName","cc","uaoCode","loading","error","username","photo","MEETING","meetings","loginRequest","data","axios","post","process","login","logout","userSagas","action","payload","user","password","put","TYPES","request","call","identifier","result","jwt","success","last_name","identification","uao_code","url","failure","fulfill","type","all","takeLatest","TRIGGER","getMeetings","userID","method","query","meetingSaga","meetingSagas","select","store","userReducer","console","log","map","m","consultor","emprendedor","rootSaga","rootReducer","combineReducers","state","REQUEST","SUCCESS","FAILURE","message","FULFILL","meetingReducer","persistConfig","key","whitelist","storage","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","enhancers","applyMiddleware","persistedReducer","persistReducer","Block","styled","div","flexbox","layout","color","space","position","bottom","borders","BlockTheme","GridForCards","Logo","Styled","img","SmallLogo","PrimaryButton","Button","LoginForm","dispatch","useDispatch","history","useHistory","useRef","pass","useSelector","loadingStatus","errorStatus","currentToken","useEffect","push","height","display","justifyContent","alignItems","flexDirection","width","maxWidth","src","py","Text","strong","onFinish","current","input","value","trigger","Item","rules","required","ref","prefix","UserOutlined","placeholder","min","Password","LockOutlined","htmlType","borderBottom","flex","p","borderRadius","border","my","icon","GoogleOutlined","style","Login","selectUser","TokenSelector","createSelector","roleSelector","usePrivateRoute","StyledPageHeader","PageHeader","Header","onBack","go","title","subTitle","toUpperCase","slice","SideBarMenu","defaultSelectedKeys","mode","theme","DesktopOutlined","UnorderedListOutlined","onClick","LogoutOutlined","EmptyUser","version","xmlns","x","y","enableBackground","viewBox","xmlSpace","d","Form","StyledUpload","Upload","MeetingForm","props","destroyOnClose","onCancel","setVisible","visible","label","defaultValue","subject","TextArea","description","moment","Date","start","showTime","end","listType","UploadOutlined","Meta","Card","Paragraph","Typography","AvatarComponent","imageUuid","undefined","RenderLoadingItems","_","index","actions","ExperimentOutlined","SelectOutlined","avatar","active","StyledParagraph","Description","substring","length","RenderItems","useState","to","EyeOutlined","EditOutlined","onConfirm","CheckOutlined","DeleteOutlined","format","Meeting","Meetings","emptyData","Array","from","uuid","meeting","overflow","flexGrow","overflowX","overflowY","MeetingSelector","meetingId","meetId","find","toString","Title","tags","scheduled","canceled","later","done","inprogress","modified","MeetingDetail","useParams","meetingData","marginLeft","Sider","Layout","Content","Footer","Schedule","breakpoint","collapsedWidth","SideMenu","margin","path","textAlign","createStore","persistor","persistStore","run","StoreConfig","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.888a44dd.chunk.js","sourcesContent":["import { createRoutine } from 'redux-saga-routines'\nimport { login } from './types'\n\nexport const LOGIN = createRoutine(login)\nexport const LOGOUT = 'USER/LOGOUT'\n","export const login = 'USER/LOGIN'\nexport const LOGOUT_SAGA = 'USER/LOGOUT_SAGA'\n","// import {} from './actions'\nimport { Reducer } from 'redux'\nimport { UserReducer } from './models'\nimport * as TYPES from './action-types'\n\nconst initialState: UserReducer = {\n  name: '',\n  token: '',\n  email: '',\n  role: '',\n  id: 0,\n  lastName: '',\n  cc: '',\n  uaoCode: '',\n  loading: false,\n  error: null,\n  username: '',\n  photo: '',\n}\n\nexport const userReducer: Reducer<UserReducer> = (state = initialState, action) => {\n  switch (action.type) {\n    case TYPES.LOGIN.REQUEST: {\n      return {\n        ...state,\n        loading: true,\n      }\n    }\n    case TYPES.LOGIN.SUCCESS: {\n      return {\n        ...state,\n        ...action?.payload,\n      }\n    }\n    case TYPES.LOGIN.FAILURE: {\n      return {\n        ...state,\n        error: action?.payload?.message,\n      }\n    }\n    case TYPES.LOGIN.FULFILL: {\n      return {\n        ...state,\n        error: null,\n        loading: false,\n      }\n    }\n    case TYPES.LOGOUT: {\n      return initialState\n    }\n    default:\n      return state\n  }\n}\n","import { createRoutine } from 'redux-saga-routines'\nimport { MEETING as meeting } from './types'\n\nexport const MEETING = createRoutine(meeting)\n","export const MEETING = 'MEETING/SEARCH'\nexport const DELETE_ALL = 'MEETINGS/DELTE_ALL'\n","// import {} from './actions'\nimport { Reducer } from 'redux'\nimport { MeetingReducer } from './models'\nimport * as TYPES from './action-types'\nimport { DELETE_ALL } from './types'\n\nconst initialState: MeetingReducer = {\n  loading: false,\n  error: null,\n  meetings: [],\n}\n\nexport const meetingReducer: Reducer<MeetingReducer> = (state = initialState, action) => {\n  switch (action.type) {\n    case TYPES.MEETING.REQUEST: {\n      return {\n        ...state,\n        loading: true,\n      }\n    }\n    case TYPES.MEETING.SUCCESS: {\n      return {\n        ...state,\n        meetings: action?.payload,\n      }\n    }\n    case TYPES.MEETING.FAILURE: {\n      return {\n        ...state,\n        error: action?.payload,\n      }\n    }\n    case TYPES.MEETING.FULFILL: {\n      return {\n        ...state,\n        loading: false,\n      }\n    }\n    case DELETE_ALL: {\n      return initialState\n    }\n\n    default:\n      return state\n  }\n}\n","import axios from 'axios'\n\ninterface Credentials {\n  identifier: string\n  password: string\n}\n\nexport const loginRequest = (data: Credentials) => {\n  return axios.post(`${process.env.REACT_APP_CMS_URL}/auth/local`, data)\n}\n","import { all, takeLatest, put, call } from 'redux-saga/effects'\nimport { loginRequest } from 'services/auth'\nimport * as TYPES from './action-types'\nimport { DELETE_ALL } from '../meeting/types'\nimport { LOGOUT_SAGA } from './types'\n\nfunction* login(action: any): any {\n  const { user, password } = action?.payload || {}\n  try {\n    yield put(TYPES.LOGIN.request())\n    const { data: result } = yield call(loginRequest, {\n      identifier: user,\n      password,\n    })\n    if (result.jwt) {\n      yield put(\n        TYPES.LOGIN.success({\n          name: result.user.name,\n          token: result.jwt,\n          email: result.user.email,\n          role: result.user?.role?.name,\n          id: result.user.id,\n          lastName: result.user.last_name,\n          cc: result.user.identification,\n          uaoCode: result.user.uao_code,\n          username: result.user.username,\n          photo: result?.user?.photo?.url,\n        })\n      )\n    }\n  } catch (err) {\n    yield put(TYPES.LOGIN.failure(err))\n  } finally {\n    yield put(TYPES.LOGIN.fulfill())\n  }\n}\n\nexport function* logout(): any {\n  yield put({ type: TYPES.LOGOUT })\n  yield put({ type: DELETE_ALL })\n}\n\nexport function* userSagas(): any {\n  yield all([takeLatest(TYPES.LOGIN.TRIGGER, login), takeLatest(LOGOUT_SAGA, logout)])\n}\n","import axios from 'axios'\n\nexport const getMeetings = (userID: number, role: string): Promise<any> => {\n  return axios({\n    method: 'POST',\n    url: `${process.env.REACT_APP_CMS_URL}/graphql`,\n    data: {\n      query: `\n   query {\n     meetings(where: {${role}:{id:${userID}}}) {\n       subject\n       description\n       start\n       end\n       id\n       state\n       consultor {\n        name\n        last_name\n        photo {\n          url\n          }\n        }\n        emprendedor {\n          name\n          last_name\n          photo {\n            url\n            }\n        }\n     }\n   }\n `,\n    },\n  })\n}\n","import { all, takeLatest, put, call, select } from 'redux-saga/effects'\nimport { getMeetings } from 'services/meeting'\nimport * as TYPES from './action-types'\n\nfunction* meetingSaga(): any {\n  try {\n    const user = yield select((store: any) => store?.userReducer)\n    console.log(user)\n    const { id: userID, role } = user\n    yield put(TYPES.MEETING.request())\n    const { data: result } = yield call(getMeetings, userID, role)\n    if (result.data?.meetings) {\n      yield put(\n        TYPES.MEETING.success(\n          result.data?.meetings.map((m: any) => ({\n            ...m,\n            consultor: {\n              name: m?.consultor?.name,\n              lastName: m?.consultor?.last_name,\n              photo: m?.consultor?.photo?.url,\n            },\n            emprendedor: {\n              name: m?.emprendedor?.name,\n              lastName: m?.emprendedor?.last_name,\n              photo: m?.emprendedor?.photo?.url,\n            },\n          }))\n        )\n      )\n    }\n  } catch (err) {\n    yield put(TYPES.MEETING.failure(err))\n  } finally {\n    yield put(TYPES.MEETING.fulfill())\n  }\n}\n\nexport function* meetingSagas(): any {\n  yield all([takeLatest(TYPES.MEETING.TRIGGER, meetingSaga)])\n}\n","import { userReducer } from 'ducks/user/reducer'\nimport { UserReducer } from 'ducks/user/models'\nimport { meetingReducer } from 'ducks/meeting/reducer'\nimport { MeetingReducer } from 'ducks/meeting/models'\n\nimport { combineReducers, createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { all, call } from 'redux-saga/effects'\nimport { userSagas } from 'ducks/user/sagas'\nimport { meetingSagas } from 'ducks/meeting/sagas'\nimport createSagaMiddleware, { SagaIterator } from 'redux-saga'\n\nexport interface Store {\n  userReducer: UserReducer\n  meetingReducer: MeetingReducer\n}\n\nfunction* rootSaga(): SagaIterator {\n  try {\n    yield all([call(userSagas), call(meetingSagas)])\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nconst rootReducer = combineReducers({\n  userReducer,\n  meetingReducer,\n})\n\nconst persistConfig = {\n  key: 'root',\n  whitelist: ['userReducer', 'meetingReducer'],\n  storage,\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst middlewares = [sagaMiddleware]\n\nconst enhancers = [applyMiddleware(...middlewares)]\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport default (): any => {\n  const store = createStore(persistedReducer, composeEnhancers(...enhancers))\n  const persistor = persistStore(store)\n  sagaMiddleware.run(rootSaga)\n  return { store, persistor }\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport {\n  borders,\n  bottom,\n  color,\n  flexbox,\n  position,\n  space,\n  layout,\n  LayoutProps,\n  SpaceProps,\n  FlexboxProps,\n  ColorProps,\n  BordersProps,\n  PositionProps,\n} from 'styled-system'\nimport styled from 'styled-components'\n\nexport type BlockProps = LayoutProps &\n  SpaceProps &\n  FlexboxProps &\n  ColorProps &\n  BordersProps &\n  PositionProps\n\nexport interface InteractiveProps {\n  avoidTouchable?: boolean\n}\n\nexport const Block = styled.div<BlockProps & InteractiveProps>`\n  ${flexbox}\n  ${layout}\n  ${color}\n  ${space}\n  ${position}\n  ${bottom}\n  ${borders}\n`\nexport const BlockTheme = styled(Block)`\n  background: radial-gradient(50% 50% at 50% 50%, #ffffff 0%, #e2e2e2 100%);\n`\n\nexport const GridForCards = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(20%, 1fr));\n  grid-gap: 20px;\n  align-content: flex-start;\n  @media screen and (max-width: 576px) {\n    grid-template-columns: repeat(auto-fill, minmax(90%, 1fr));\n  }\n  @media screen and (min-width: 576px) and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(45%, 1fr));\n  }\n  @media screen and (min-width: 768px) and (max-width: 1200px) {\n    grid-template-columns: repeat(auto-fill, minmax(30%, 1fr));\n  }\n`\n","import Styled from 'styled-components'\n\nexport const Logo = Styled.img`\nwidth: 6rem;\n`\n\nexport const SmallLogo = Styled.img`\nwidth: 4rem;\n`\n","import styled from 'styled-components'\nimport { Button } from 'antd'\n\nexport const PrimaryButton = styled(Button)`\n  width: 100%;\n  background-color: #e1243f;\n  border-color: #e1243f;\n`\n","import React, { FC, useEffect, useRef } from 'react'\nimport { BlockTheme, Block } from 'views/components/UI/content'\nimport { Logo } from 'views/components/UI/Images'\nimport { Typography, Form, Input, Button, message } from 'antd'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LOGIN } from 'ducks/user/action-types'\nimport { PrimaryButton } from 'views/components/UI/Buttons'\nimport { UserOutlined, LockOutlined, GoogleOutlined } from '@ant-design/icons'\n\nconst LoginForm: FC = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const user = useRef<any>()\n  const pass = useRef<any>()\n  const { loading: loadingStatus, error: errorStatus, token: currentToken } = useSelector(\n    ({ userReducer: { loading, error, token } }: any) => ({\n      loading,\n      error,\n      token,\n    })\n  )\n\n  useEffect(() => {\n    if (errorStatus) {\n      message.error('errorStatus')\n    }\n  }, [errorStatus])\n  const handleLogin = () => {\n    console.log({ user: user?.current?.input?.value, pass: pass?.current?.input?.value })\n    dispatch(\n      LOGIN.trigger({\n        user: user?.current?.input?.value,\n        password: pass?.current?.input?.value,\n      })\n    )\n  }\n  if (currentToken) {\n    history.push('/schedules/meetings')\n  }\n  return (\n    <BlockTheme height=\"100vh\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n      <Block\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        width=\"90vw\"\n        maxWidth=\"27rem\">\n        <Logo src=\"https://i.imgur.com/RFJPfyp.png\" />\n        <Block py=\"0.3rem\">\n          <Typography.Text>SINAPSIS</Typography.Text>\n        </Block>\n        <Block py=\"1.4rem\">\n          <Typography.Text strong>INGRESAR</Typography.Text>\n        </Block>\n        <Block>\n          <Form onFinish={handleLogin} layout=\"vertical\">\n            <Form.Item\n              name=\"email\"\n              rules={[\n                {\n                  type: 'email',\n                  message: 'Ingrese un correo válido',\n                },\n                {\n                  required: true,\n                  message: 'Es necesario un correo',\n                },\n              ]}>\n              <Input ref={user} prefix={<UserOutlined />} placeholder=\"Correo institucional\" />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Ingrese su constraseña',\n                },\n                {\n                  min: 4,\n                  message: 'minimo 4 caracteres',\n                },\n              ]}>\n              <Input.Password ref={pass} prefix={<LockOutlined />} placeholder=\"Contraseña\" />\n            </Form.Item>\n            <Form.Item>\n              <PrimaryButton type=\"primary\" htmlType=\"submit\">\n                {loadingStatus ? 'Loading ' : 'Ingresar'}\n              </PrimaryButton>\n            </Form.Item>\n          </Form>\n          <Block display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n            <Block borderBottom=\"solid 1px #000\" flex={0.4}>\n              <span />\n            </Block>\n            <Block p=\".4rem\" borderRadius=\"50%\" border=\"solid 1px #000\">\n              <span />\n            </Block>\n            <Block borderBottom=\"solid 1px #000\" flex={0.4}>\n              <span />\n            </Block>\n          </Block>\n          <Block my=\"1rem\">\n            <Button\n              icon={<GoogleOutlined />}\n              style={{ width: '100%' }}\n              type=\"default\"\n              htmlType=\"submit\">\n              Ingresar con Google\n            </Button>\n          </Block>\n        </Block>\n      </Block>\n    </BlockTheme>\n  )\n}\n\nexport default LoginForm\n","import React, { FC } from 'react'\nimport LoginForm from 'views/components/forms/Login'\n\nconst Login: FC = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  )\n}\n\nexport default Login\n","import { createSelector, Selector } from 'reselect'\nimport { Store } from 'ducks/store'\nimport { UserReducer } from './models'\n\nconst selectUser = (store: Store): UserReducer => store.userReducer\n\nconst selectToken = (user: UserReducer): string => user.token\n\nconst selectRole = (user: UserReducer): string => user.role\n\nexport const TokenSelector: Selector<Store, string> = createSelector(selectUser, selectToken)\n\nexport const roleSelector: Selector<Store, string> = createSelector(selectUser, selectRole)\n\n// export const TokenSelector\n","// import { useSelector } from 'react-redux'\n\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { TokenSelector } from 'ducks/user/selectors'\n\nconst usePrivateRoute = (): void => {\n  const token = useSelector(TokenSelector)\n  const history = useHistory()\n  if (!token) {\n    history.push('/login')\n  }\n}\n\nexport default usePrivateRoute\n","import { PageHeader } from 'antd'\nimport styled from 'styled-components'\n\nexport const StyledPageHeader = styled(PageHeader)`\n  border: 1px solid rgb(235, 237, 240);\n  background-color: #fff;\n`\n","import { StyledPageHeader } from 'views/components/UI/Header'\nimport React, { FC } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { roleSelector } from 'ducks/user/selectors'\n\nconst Header: FC = () => {\n  const history = useHistory()\n  const role = useSelector(roleSelector)\n\n  return (\n    <StyledPageHeader\n      onBack={() => history.go(-1)}\n      title=\"SINAPSIS\"\n      subTitle={role[0]?.toUpperCase() + role?.slice(1)}\n    />\n  )\n}\nexport default Header\n","/* eslint-disable react/jsx-wrap-multilines */\nimport React, { FC } from 'react'\nimport { Menu } from 'antd'\nimport { SmallLogo } from 'views/components/UI/Images'\nimport { LogoutOutlined, DesktopOutlined, UnorderedListOutlined } from '@ant-design/icons'\nimport { Block } from 'views/components/UI/content'\nimport { useDispatch } from 'react-redux'\nimport { LOGOUT_SAGA } from 'ducks/user/types'\n\nconst SideBarMenu: FC = () => {\n  const dispatch = useDispatch()\n  const handleLogout = (): void => {\n    dispatch({\n      type: LOGOUT_SAGA,\n    })\n  }\n  return (\n    <>\n      <Block display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"4.125rem\">\n        <SmallLogo src=\"https://i.imgur.com/RFJPfyp.png\" />\n      </Block>\n      <Menu defaultSelectedKeys={['2']} mode=\"inline\" theme=\"dark\">\n        <Menu.Item key=\"2\">\n          <DesktopOutlined />\n          <span>Meetings</span>\n        </Menu.Item>\n        <Menu.Item key=\"3\">\n          <UnorderedListOutlined />\n          <span>Task</span>\n        </Menu.Item>\n\n        <Menu.Item key=\"logout\" onClick={handleLogout}>\n          <LogoutOutlined />\n          <span>Logout</span>\n        </Menu.Item>\n      </Menu>\n    </>\n  )\n}\n\nexport default SideBarMenu\n","import React, { FC } from 'react'\n\nexport const EmptyUser: FC<any> = ({ width, height }) => (\n  <svg\n    version=\"1.1\"\n    id=\"Capa_1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    x=\"0px\"\n    y=\"0px\"\n    enableBackground=\"0 0 512 512\"\n    viewBox=\"0 0 512 512\"\n    xmlSpace=\"preserve\">\n    <g>\n      <g>\n        <path\n          d=\"M256,0C114.844,0,0,114.844,0,256s114.844,256,256,256s256-114.844,256-256S397.156,0,256,0z M256,74.667\n    c67.635,0,122.667,55.031,122.667,122.667S323.635,320,256,320s-122.667-55.031-122.667-122.667S188.365,74.667,256,74.667z\n     M256,469.333c-69.707,0-131.52-33.755-170.473-85.615c42.676-20.534,103.621-42.385,170.473-42.385\n    c66.857,0,127.807,21.854,170.474,42.383C387.521,435.577,325.708,469.333,256,469.333z\"\n        />\n      </g>\n    </g>\n  </svg>\n)\n","import React, { FC } from 'react'\nimport { Meeting } from 'ducks/meeting/models'\nimport { Form, Input, DatePicker, Upload, Button, Modal } from 'antd'\nimport moment from 'moment'\nimport styled from 'styled-components'\nimport { UploadOutlined } from '@ant-design/icons'\n\nconst { Item } = Form\n\nconst StyledUpload = styled(Upload)`\n  & [class*='-upload-list-rtl'] .ant-upload-list-item {\n    float: right;\n  }\n  & .ant-upload-list-item {\n    float: left;\n    width: 200px;\n    margin-right: 8px;\n  }\n  & .ant-upload-animate-enter {\n    animation-name: uploadAnimateInlineIn;\n  }\n  & .ant-upload-animate-leave {\n    animation-name: uploadAnimateInlineOut;\n  }\n`\n\nconst MeetingForm: FC<Meeting & { visible: boolean; setVisible: any }> = props => {\n  return (\n    <Modal\n      destroyOnClose\n      onCancel={(): void => {\n        props.setVisible(false)\n      }}\n      visible={props.visible}\n      title=\"Update meeting\">\n      <Form layout=\"vertical\">\n        <Item label=\"Subject\">\n          <Input defaultValue={props.subject} />\n        </Item>\n        <Item label=\"Description\">\n          <Input.TextArea defaultValue={props.description} />\n        </Item>\n        <Item label=\"Start\">\n          <DatePicker defaultValue={moment(new Date(props.start))} showTime />\n        </Item>\n        <Item label=\"End\">\n          <DatePicker defaultValue={moment(new Date(props.end))} showTime />\n        </Item>\n        <Item label=\"Attachments\">\n          <StyledUpload listType=\"picture\">\n            <Button>\n              <UploadOutlined />\n              <span>Upload</span>\n            </Button>\n          </StyledUpload>\n        </Item>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default MeetingForm\n","/* eslint-disable react/jsx-wrap-multilines */\nimport React, { FC, useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { MEETING } from 'ducks/meeting/action-types'\nimport { Card, Typography, Skeleton, Avatar, Popconfirm, Modal } from 'antd'\nimport {\n  ExperimentOutlined,\n  SelectOutlined,\n  CheckOutlined,\n  DeleteOutlined,\n  EyeOutlined,\n  EditOutlined,\n} from '@ant-design/icons'\nimport { EmptyUser } from 'views/components/UI/Icons'\nimport { GridForCards, Block } from 'views/components/UI/content'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Store } from 'ducks/store'\nimport { Meeting } from 'ducks/meeting/models'\nimport moment from 'moment'\nimport MeetingForm from 'views/components/forms/Meeting'\nimport { roleSelector } from 'ducks/user/selectors'\n\nconst { Meta } = Card\nconst { Paragraph } = Typography\n\nconst AvatarComponent: FC<{ imageUuid?: string; loading?: boolean }> = ({ imageUuid, loading }) =>\n  loading ? (\n    <Avatar />\n  ) : (\n    <Avatar\n      icon={!imageUuid ? <EmptyUser /> : undefined}\n      src={imageUuid ? `${process.env.REACT_APP_CMS_URL}${imageUuid}` : undefined}\n    />\n  )\n\nconst RenderLoadingItems: FC = (_, index) => (\n  <Card\n    key={`loading_${index}`}\n    actions={[\n      <ExperimentOutlined title=\"Testing mode\" />,\n      <SelectOutlined title=\"Production mode\" />,\n    ]}>\n    <Skeleton loading avatar active>\n      <Meta avatar={<AvatarComponent />} title=\"\" description=\"\" />\n    </Skeleton>\n  </Card>\n)\n\nconst StyledParagraph = styled(Paragraph)``\n\nconst Description: FC<{ description: string }> = ({ description }) => (\n  <StyledParagraph type=\"secondary\">\n    {`${description.substring(0, 130)}\n    ${description.length > 130 ? '...' : ''}`}\n  </StyledParagraph>\n)\n\nconst RenderItems: FC<Meeting> = (props, index) => {\n  const { subject, description = '', start, id, consultor, emprendedor } = props\n  const [visible, setVisible] = useState(false)\n  const role = useSelector(roleSelector)\n  return (\n    <Card\n      key={`${id}meet${index}`}\n      actions={[\n        <Link to={`/schedules/detail-meeting/${id}`}>\n          <EyeOutlined />\n        </Link>,\n        <EditOutlined\n          onClick={() => {\n            setVisible(true)\n          }}\n        />,\n        <Popconfirm onConfirm={() => {}} title=\"Already you arrived?\">\n          <CheckOutlined />\n        </Popconfirm>,\n        <Popconfirm onConfirm={() => {}} title=\"Cancel meeting?\">\n          <DeleteOutlined />\n        </Popconfirm>,\n      ]}>\n      <Skeleton loading={false} avatar active>\n        <Meta\n          avatar={\n            <AvatarComponent\n              imageUuid={role === 'emprendedor' ? consultor.photo : emprendedor.photo}\n            />\n          }\n          title={subject}\n          description={\n            <Paragraph>\n              <Description description={description} />\n              <span>{moment(new Date(start)).format('M/D/YYYY h:mm a')}</span>\n            </Paragraph>\n          }\n        />\n      </Skeleton>\n      <MeetingForm {...props} setVisible={setVisible} visible={visible} />\n    </Card>\n  )\n}\n\nconst Meetings: FC = () => {\n  const emptyData = useRef<any[]>(Array.from(Array(16)).map((_, index) => ({ uuid: `${index}ed` })))\n  const dispatch = useDispatch()\n\n  const meeting = useSelector((store: Store) => store?.meetingReducer)\n  console.log(meeting)\n  useEffect(() => {\n    dispatch(MEETING.trigger())\n  }, [])\n\n  const data = meeting.loading ? emptyData.current : meeting.meetings\n  return (\n    <Block width=\"100%\" height=\"100%\" overflow=\"auto\">\n      <Block p={20} flexGrow={1} overflowX=\"hidden\" overflowY=\"auto\">\n        <GridForCards>\n          {data.map(d =>\n            meeting.loading ? <RenderLoadingItems {...d} /> : <RenderItems {...d} />\n          )}\n        </GridForCards>\n      </Block>\n    </Block>\n  )\n}\nexport default Meetings\n","/* eslint-disable eqeqeq */\nimport { Selector, ParametricSelector, createSelector } from 'reselect'\nimport { Store } from 'ducks/store'\nimport { Meeting } from './models'\n\ninterface DetailProps {\n  meetingId: string\n}\n\nconst selectMeetings = (store: Store): Meeting[] => store.meetingReducer?.meetings\n\nconst selectDetailprops = (_: Store, props: DetailProps): string => props.meetingId\n\nconst selectMeeting = (meetings: Meeting[], meetId: string): Meeting =>\n  meetings.find(m => m.id.toString() == meetId) as Meeting\n\nexport const MeetingSelector: ParametricSelector<Store, DetailProps, Meeting> = createSelector(\n  selectMeetings,\n  selectDetailprops,\n  selectMeeting\n)\n","import React, { FC } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { MeetingSelector } from 'ducks/meeting/selectors'\nimport { useSelector } from 'react-redux'\nimport { Store } from 'ducks/store'\nimport { Typography, Tag } from 'antd'\nimport { Block } from 'views/components/UI/content'\n\nconst { Title, Paragraph } = Typography\n\nconst tags = {\n  scheduled: 'cyan',\n  canceled: 'default',\n  later: 'warning',\n  done: 'success',\n  inprogress: 'processing',\n  modified: 'default',\n}\n\nconst MeetingDetail: FC = () => {\n  const { meeting } = useParams()\n  const meetingData = useSelector((store: Store) =>\n    MeetingSelector(store, { meetingId: meeting || '' })\n  )\n  console.log(`id meting: ${meeting}`)\n  console.log(meetingData)\n  return (\n    <Block>\n      <Title>\n        <span>{meetingData?.subject}</span>\n        <Tag style={{ marginLeft: '0.5rem' }} color={tags[meetingData?.state]}>\n          {meetingData?.state}\n        </Tag>\n      </Title>\n      <Paragraph style={{ width: '50rem' }}>{meetingData?.description}</Paragraph>\n      <h4>Tareas</h4>\n    </Block>\n  )\n}\n\nexport default MeetingDetail\n","import React, { FC } from 'react'\nimport usePrivateRoute from 'hooks/Private/route'\nimport Header from 'views/components/Header'\nimport SideMenu from 'views/components/SideMenu'\nimport { Layout } from 'antd'\nimport Meetings from 'views/components/Meetings'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport MeetingDetail from 'views/screens/Meeting'\n\nconst { Sider, Content, Footer } = Layout\n\nconst Schedule: FC = () => {\n  usePrivateRoute()\n  return (\n    <Layout style={{ width: '100vw', height: '100vh' }}>\n      <Sider breakpoint=\"lg\" collapsedWidth=\"0\">\n        <SideMenu />\n      </Sider>\n      <Layout>\n        <Header />\n        <Content style={{ margin: '24px 16px 0' }}>\n          <Switch>\n            <Route path=\"/schedules/meetings\">\n              <Meetings />\n            </Route>\n            <Route path=\"/schedules/detail-meeting/:meeting\">\n              <MeetingDetail />\n            </Route>\n            <Route>\n              <Redirect to=\"/schedules/meetings\" />\n            </Route>\n          </Switch>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>UAO 2020 Created by Ingesoft</Footer>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Schedule\n","import { PersistGate } from 'redux-persist/integration/react'\nimport React, { FC } from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport StoreConfig from 'ducks/store'\nimport Login from 'views/screens/Login'\nimport Schedule from 'views/screens/Schedule'\n\nconst { store, persistor } = StoreConfig()\n\nconst App: FC = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router>\n          <Switch>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/consultor-schedule\">\n              <Schedule />\n            </Route>\n            <Route path=\"/schedules\">\n              <Schedule />\n            </Route>\n            <Route path=\"/admin-dashboard\">\n              <Schedule />\n            </Route>\n            <Route>\n              <Redirect to=\"/login\" />\n            </Route>\n          </Switch>\n        </Router>\n      </PersistGate>\n    </Provider>\n  )\n}\n\nexport default App\n\nexport { store }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'antd/dist/antd.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}